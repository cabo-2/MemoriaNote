#compdef mn
local prog="mn"
local curcontext="$curcontext" state line  ret=1

local -a _1st_arguments
_1st_arguments=(
  'config:Manage configuration options'
  'edit:Edit and manage text commands'
  'export:Export text files'
  'find:Find and browse text commands'
  'import:Import text files'
  'list:List text'
  'new:Create text command'
  'work:List, change and manage note options'
)

_arguments -C \
  '1: :->arg1' \
  '2: :->arg2' \
  '3: :->arg3' && ret=0

__mn_list(){
  _call_program commands $prog list "$1" --completion
}

__mn_work_list(){
  _call_program commands $prog work list --completion
}

case $state in
  arg1)
    _describe -t commands 'commands' _1st_arguments && ret=0
    ;;

  arg2)
    case $words[2] in
      (edit|find|list|ls)
        _values 'name' $(__mn_list ${words[-1]}) && ret=0
        ;;

      (work)
        local -a _work_arguments
        _work_arguments=(
          'add:Add a note'
          'backup:Backup a note'
          'create:Create a note'
          'edit:Edit a note'
          'list:List notes'
          'remove:Remove a note'
          'restore:Restore a note'
          'select:select a note'
        )
        _describe -t commands 'work subcommands' _work_arguments && ret=0
        ;;
      
      (config)
        local -a _config_arguments
        _config_arguments=(
          'edit:Edit config'
          'show:Show config'
        )
        _describe -t commands 'config subcommands' _config_arguments && ret=0
        ;;

      (import)
        _arguments '*:input dir:_files' && ret=0
        ;;

      (export)
        _arguments '*:output dir:_files' && ret=0
        ;;

      *)
        (( ret )) && _message 'no more arguments'
        ;;

    esac
    ;;

  arg3)
    case $words[2] in
      (work)
        case $words[3] in
          (edit|remove|select)
            _values 'name' $(__mn_work_list ${words[-1]}) && ret=0
            ;;

          (add)
            _arguments '*:input file:_files' && ret=0
            ;;

          (backup)
            _values 'name' $(__mn_work_list ${words[-1]}) && ret=0
            ;;

          (restore)
            _arguments '*:input file:_files' && ret=0
            ;;

          *)
            (( ret )) && _message 'no more arguments'
            ;;

        esac
        ;;

    esac
    ;;

esac

return ret
